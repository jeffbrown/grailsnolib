<project name="grails-functional-test">

    <property name="checkoutDir" location="functional-tests"/>
    <property name="app.checkout.url" value="http://svn.codehaus.org/grails/trunk/grails-functional-tests/apps/"/>

    <taskdef name="svn" classname="org.tigris.subversion.svnant.SvnTask"/>
    <taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy" classpathref="classpath"/>

    <macrodef name="grails">
        <attribute name="grailsStarter"
                   default="org.codehaus.groovy.grails.cli.support.GrailsStarter"/>
        <attribute name="grailsScriptRunner"
                   default="org.codehaus.groovy.grails.cli.GrailsScriptRunner"/>
        <attribute name="command" default="help"/>
        <attribute name="projectName" default=""/>
        <sequential>
            <echo message="Project is @{projectName}"/>
            <echo message="Command is @{command}"/>
            <echo message="Basedir is ${basedir}"/>
            <property name="grails.home" location="."/>
            <echo message="Grails home is ${grails.home}"/>

            <java fork="true" classname="@{grailsStarter}" dir="${checkoutDir}/@{projectName}" resultproperty="testResult">
                <env key="GRAILS_HOME" value="${grails.home}"/>
                <env key="JAVA_OPTS" value="-XX:MaxPermSize=256m -Xmx512m"/>
                <sysproperty key="grails.home" value="${grails.home}"/>
                <sysproperty key="groovy.starter.conf"
                             value="${grails.home}/conf/groovy-starter.conf"/>

                <sysproperty key="disable.auto.recompile" value="false"/>
                <sysproperty key="server.port" value="8080"/>
                <sysproperty key="enable.jndi" value="true"/>
                <sysproperty key="prj.home" value="${checkoutDir}/@{projectName}"/>
                <sysproperty key="base.dir" value="${checkoutDir}/@{projectName}"/>

                <classpath>
                    <path refid="classpath"/>
                    <!-- Mac Only but should do no harm -->
                    <pathelement path="/System/Library/Java"/>
                </classpath>

                <arg line="--main org.codehaus.groovy.grails.cli.GrailsScriptRunner"/>
                <arg line="--conf ${grails.home}/conf/groovy-starter.conf"/>
                <arg line="--classpath ${grails.home}/lib/groovy-all-1.6-beta-1-SNAPSHOT.jar:${grails.home}/dist/grails-cli-1.0-final-SNAPSHOT.jar"/>

                <arg value="@{command}"/>
            </java>
        </sequential>
    </macrodef>

    <target name="functional-test"
            description="Runs functional tests for one or more test applications from SVN">
        <property name="projectName" value="HelloWorld"/>
        <condition property="update.app">
            <available file="${checkoutDir}/${projectName}">
            </available>
        </condition>
        <condition property="checkout.app">
            <not>
                <available file="${checkoutDir}/${projectName}">
                </available>
            </not>
        </condition>
        <antcall target="-checkout-app">
            <param name="projectName" value="${projectName}"/>
        </antcall>
        <antcall target="-update-app">
            <param name="projectName" value="${projectName}"/>
        </antcall>
        <groovy>
            ant.grails(command:"install-plugin webtest", projectName:properties.projectName)
            println "Result 1 was: ${properties.testResult}"

            ant.grails(command:"run-webtest", projectName:"HelloWorld")
            println "Result 2 was: ${properties.testResult}"
            if (properties.testResult.toInteger() != 0) {
                ant.fail(message:"Application functional tests failed")
            }
        </groovy>
    </target>


    <target name="clean">
        <delete dir="${checkoutDir}" failonerror="false"/>
    </target>

    <target name="-checkout-app" unless="update.app">
        <echo>Checking out functional test application from :${app.checkout.url}${projectName}</echo>

        <antcall target="-checkout-app-head"/>
    </target>

    <target name="-update-app" unless="checkout.app">
        <echo>Updating local copy of functional test application from :${app.checkout.url}${projectName}</echo>

        <antcall target="-update-app-head"/>
    </target>

    <target name="-checkout-app-head">
        <svn>
            <checkout url="${app.checkout.url}${projectName}" destPath="${checkoutDir}/${projectName}"/>
        </svn>
    </target>

    <target name="-update-app-head">
        <svn>
            <update dir="${checkoutDir}/${projectName}"/>
        </svn>
    </target>
</project>
